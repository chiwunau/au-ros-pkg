(setq cds-gripper-pre (make-cascoords))
(setq cds-gripper (make-cascoords :coords (send cds-gripper-pre :copy-worldcoords)))

(setq theta 5)
(send cds-gripper :rotate (deg2rad (* -1 theta)) :z)
;(send cds-gripper :rotate (deg2rad 5) :x)
(send cds-gripper :translate (float-vector (* -730 (sin (deg2rad theta)))  0.0 0.0))

(setq cds-trans (make-coords :coords (send cds-gripper-pre :transformation cds-gripper)))
(send *irtviewer* :objects cds-gripper)

(dotimes (i 1)
  (let ((c (make-cube 10 10 10 :coords (send cds-gripper :copy-worldcoords))))
    (send c :set-color :red)
    (send *irtviewer* :objects c)
    (send cds-gripper :transform cds-trans :local)
    (setq cds-gripper-pre (send cds-gripper :copy-worldcoords))
    (send *irtviewer* :draw-objects)
    ))

(let ((cds (send cds-gripper :copy-worldcoords)))
  (dotimes (i 20)
    (let ((c (make-cube 10 10 10 :coords (send cds :copy-worldcoords))))
      (send c :set-color :red)
      (send *irtviewer* :objects c)
      (send cds :transform cds-trans :local)
      (send *irtviewer* :draw-objects)
      )))

(send cds-gripper :rotate (deg2rad (* -1 2)) :z)
(send cds-gripper :rotate (deg2rad (* 1 1)) :x)

;(send cds-gripper :rotate (deg2rad 5) :x)
(send cds-gripper :translate (float-vector 0.0 30.0 0.0))

(send cds-trans :transform (make-coords :coords (send cds-gripper-pre :transformation cds-gripper)) :local)

(setq ac (make-coords :coords (send cds-gripper-pre :transformation cds-gripper)))
(dotimes (i 1)
  (let ((c (make-cube 10 10 10 :coords (send cds-gripper :copy-worldcoords))))
    (send c :set-color :green)
    (send *irtviewer* :objects c)
    (send cds-gripper :transform cds-trans :local)
    (setq cds-gripper-pre (send cds-gripper :copy-worldcoords))
    (send *irtviewer* :draw-objects)
    ))
(let ((cds (send cds-gripper :copy-worldcoords)))
  (dotimes (i 8)
    (let ((c (make-cube 10 10 10 :coords (send cds :copy-worldcoords))))
      (send c :set-color :green)
      (send *irtviewer* :objects c)
      (send cds :transform cds-trans :local)
      (send *irtviewer* :draw-objects)
    )))
